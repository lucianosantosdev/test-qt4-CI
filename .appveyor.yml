version: '{branch}-{build}'

os: Visual Studio 2015

init:
  # Create our AppVeyor version
  - ps: $env:commit = $env:appveyor_repo_commit.SubString(0,7)
  - ps: Update-AppveyorBuild -Version ("{0}-{1}-{2}" -f $env:appveyor_repo_branch,$env:appveyor_build_number,$env:commit )

environment:
  matrix:
    - arch: x86
      compiler: msvc2010
      backend: vs2010
    # - BUILD: Qt4.8.7-x86-msvc2015
    #   QMAKE_OPTIONS: "CONFIG+=NO_QSM_POSTGRES"
    #   COMPILERBAT: '"C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86'
    #   PRO_MAKE: nmake release
    #   QMAKESPEC: win32-msvc2015
    #   QTMOVE: '%OUTDIR%\bin 4.8.7-msvc2015'
    #   QTSUB: 'qt-4.8.7-x64-msvc2015'
    #   QTDOWNLOAD1: https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/clean/qt-4.8.7-x64-msvc2015.7z
    #   QTARCHIVE1: 'qt-4.8.7-x64-msvc2015.7z'
    #   QTARCHIVE1_OPTS: '"-ir!?OUTDIR\*" "-xr!*doc\*" "-xr!*examples\*" "-xr!*demos\*"'

platform:
  - x64

configuration:  
  - release
  # -debug

cache:
  - C:\Qt\4.8.7 -> appveyor.yml
  - C:\OpenSSL -> appveyor.yml

install:
  # fix git\bin bug for mingw build
  - choco install curl 7zip # dependencywalker
  - mkdir extern
  - cd extern
  
  # Build OpenSSL
  
  # - curl -kLO https://www.openssl.org/source/old/1.0.2/openssl-1.0.2l.tar.gz
  # - 7z e openssl-1.0.2l.tar.gz  && 7z x openssl-1.0.2l.tar
  # - cd openssl-1.0.2l
  # - perl Configure VC-WIN32 no-asm --prefix=C:\OpenSSL
  # - ms\do_ms
  # - nmake -f ms\nt.mak && nmake -f ms\nt.mak install
  # - dir C:\OpenSSL
  # - set "PATH=C:\OpenSSL\bin;%PATH%"

  # install Qt
  # - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
  - call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" %arch%
  - set make=nmake.exe
  - curl https://www.dropbox.com/s/d01tdjhs59jg5ak/qt487_msvs2010.zip?dl=1 -O -J -L
  - 7z x qt487_msvs2010.zip > nul
  - move Qt\4.8.7 C:\Qt
  # - IF NOT EXIST "C:\Qt\4.8.7" (curl -kLO https://download.qt.io/archive/qt/4.8/4.8.7/qt-everywhere-opensource-src-4.8.7.zip)
  # - IF NOT EXIST "C:\Qt\4.8.7" (7z x qt-everywhere-opensource-src-4.8.7.zip > nul && cd qt-everywhere-opensource-src-4.8.7)
  # - IF NOT EXIST "C:\Qt\4.8.7" (curl -kLO https://raw.githubusercontent.com/appleseedhq/appleseed-wiki/master/documents/qt-patches/qt-487.patch)
  # - IF NOT EXIST "C:\Qt\4.8.7" (patch -p0 < qt-487.patch)
  # - IF NOT EXIST "C:\Qt\4.8.7" (configure.exe  -make nmake -platform win32-msvc2015 -prefix C:\Qt\4.8.7 -release -confirm-license -opensource -webkit -no-qt3support -nomake demos -nomake examples -openssl -I C:\OpenSSL\include -L C:\OpenSSL\lib && nmake && nmake install)
  - cd C:\Qt\4.8.7
  - set "QTDIR=%cd%"
  - set "PATH=%QTDIR%\bin;%PATH%"
  
before_build:
  # Prepare the out-of-source build directory.
  - cd %APPVEYOR_BUILD_FOLDER%
  - mkdir %APPVEYOR_BUILD_FOLDER%-build
  - qmake -spec win32-msvc2010 -o %APPVEYOR_BUILD_FOLDER%-build -r -Wall -Wlogic -Wparser CONFIG+=%CONFIGURATION% %APPVEYOR_BUILD_FOLDER%
  
build_script:
  # Compile it and check for .exe
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - '%make%'
  - dir /b /s *.exe

after_build:
  - set BIN=browser
  # Add a link to the build output within the source directory. This is needed because AppVeyor does
  # not support extracting artifacts from out-of-source build directories. See 'artifacts' below.
  - dir /b /s *.exe
  - mkdir deploy
  - copy %APPVEYOR_BUILD_FOLDER%-build\%CONFIGURATION%\%BIN%.exe deploy\%BIN%.exe
  - dir %QTDIR%
  - dir %QTDIR%\lib
  - copy %QTDIR%\lib\QtCore4.dll deploy\
  - copy %QTDIR%\lib\QtGui4.dll deploy\
  - copy %QTDIR%\lib\QtNetwork4.dll deploy\
  - copy %QTDIR%\lib\QtWebKit4.dll deploy\
  - 7z a -tzip %BIN%_%CONFIGURATION%.zip deploy -r
  - copy %APPVEYOR_BUILD_FOLDER%-build\%BIN%_%CONFIGURATION%.zip %APPVEYOR_BUILD_FOLDER%\%BIN%_%CONFIGURATION%.zip
  - dir /b /s *.zip

artifacts:
  - path: '%BIN%_%CONFIGURATION%.zip'
    name: '%BIN%'

deploy:
  - provider: GitHub
    release: continuous
    artifact: '%BIN%'
    draft: false
    prerelease: true