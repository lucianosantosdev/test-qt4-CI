version: '{branch}-{build}'

init:
  # Create our AppVeyor version
  - ps: $env:commit = $env:appveyor_repo_commit.SubString(0,7)
  - ps: Update-AppveyorBuild -Version ("{0}-{1}-{2}" -f $env:appveyor_repo_branch,$env:appveyor_build_number,$env:commit )

environment:
  VSVER: 14.0
  matrix:
    - PLATFORM: x86
      BUILDER: NMake
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    # - BUILD: Qt4.8.7-x86-msvc2015
    #   QMAKE_OPTIONS: "CONFIG+=NO_QSM_POSTGRES"
    #   COMPILERBAT: '"C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" x86'
    #   PRO_MAKE: nmake release
    #   QMAKESPEC: win32-msvc2015
    #   QTMOVE: '%OUTDIR%\bin 4.8.7-msvc2015'
    #   QTSUB: 'qt-4.8.7-x64-msvc2015'
    #   QTDOWNLOAD1: https://download.gforge.liris.cnrs.fr/meppbin/windows/vs2015/MEPP/packages/clean/qt-4.8.7-x64-msvc2015.7z
    #   QTARCHIVE1: 'qt-4.8.7-x64-msvc2015.7z'
    #   QTARCHIVE1_OPTS: '"-ir!?OUTDIR\*" "-xr!*doc\*" "-xr!*examples\*" "-xr!*demos\*"'
      
configuration:
  - release
  # -debug

install:
  # fix git\bin bug for mingw build
  - choco install curl 7zip # dependencywalker
  - mkdir extern
  - cd extern
  - dir "C:\Program Files"

  # Build OpenSSL
  - curl -kLO http://www.dwyco.com/downloads/qt-4.8.7.zip
  - 7z x qt-4.8.7.zip > nul
  - dir
  - dir qt-4.8.7
  - cd qt-4.8.7
  - dir mkspecs\win32-msvc2015

  # finish install
  - set "QTDIR=%cd%"
  - set "PATH=%QTDIR%\bin;%PATH%"

  # # Set some vars
  - qmake -v
  # - set PRJLIBDIR=%WINDIR%\SysWOW64 # Find vclibs
  # - if %QTDIR:msvc=%==%QTDIR% g++ --version
  # - set make=mingw32-make.exe
  # - if %QTDIR:msvc=%==%QTDIR% %make% --version
  - dir "C:\" 
  - dir "C:\Program Files\Microsoft Visual Studio %VSVER%\Common7"
  - call "C:\Program Files\Microsoft Visual Studio %VSVER%\VC\vcvarsall.bat" %ARCH%
  - set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul
  
before_build:
  # Prepare the out-of-source build directory.
  - cd %APPVEYOR_BUILD_FOLDER%
  - mkdir %APPVEYOR_BUILD_FOLDER%-build
  
build_script:
  # Compile it and check for .exe
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - qmake -r  -spec win32-msvc2015 %APPVEYOR_BUILD_FOLDER%
  - '%make%'
  - dir /b /s *.exe

after_build:
  - set BIN=browser
  # Add a link to the build output within the source directory. This is needed because AppVeyor does
  # not support extracting artifacts from out-of-source build directories. See 'artifacts' below.
  - dir /b /s *.exe
  - mkdir deploy
  - copy %APPVEYOR_BUILD_FOLDER%-build\%CONFIGURATION%\%BIN%.exe deploy\%BIN%.exe
  - windeployqt --%CONFIGURATION% deploy/%BIN%.exe --verbose=2
  - for %%I in (%PRJLIBS%) do copy %PRJLIBDIR%\%%I deploy\
  - 7z a -tzip %BIN%_%CONFIGURATION%.zip deploy -r
  - copy %APPVEYOR_BUILD_FOLDER%-build\%BIN%_%CONFIGURATION%.zip %APPVEYOR_BUILD_FOLDER%\%BIN%_%CONFIGURATION%.zip
  - dir /b /s *.zip

artifacts:
  - path: '%BIN%_%CONFIGURATION%.zip'
    name: '%BIN%'

deploy:
  - provider: GitHub
    release: continuous
    artifact: '%BIN%'
    draft: false
    prerelease: true